//Task 1

/*
Следующая функция возвращает true, если параметр age больше 18.

В ином случае она запрашивает подтверждение через confirm и возвращает его результат:

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    // ...
    return confirm('Родители разрешили?');
  }
}
Будет ли эта функция работать как-то иначе, если убрать else?

function checkAge(age) {
  if (age > 18) {
    return true;
  }
  // ...
  return confirm('Родители разрешили?');
}
Есть ли хоть одно отличие в поведении этого варианта?
*/

//Нет отличий

//==================================================================

//Task 2

/*Следующая функция возвращает true, если параметр age больше 18.

В ином случае она задаёт вопрос confirm и возвращает его результат.

function checkAge(age) {
  if (age > 18) {
    return true;
  } else {
    return confirm('Родители разрешили?');
  }
}
Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.

Сделайте два варианта функции checkAge:

Используя оператор ?
Используя оператор ||
*/
/*
//Первый вариант
function checkAge(age) {
  return (age > 18) ? true : confirm('Родители разрешили?');
}

//Второй вариант
function checkAge(age) {
  return (age > 18) || confirm('Родители разрешили?');
}
*/

//==================================================================

//Task 3

/*
Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.

Пример вызовов:

min(2, 5) == 2
min(3, -1) == -1
min(1, 1) == 1
*/

/*
function min(a, b) {
  return (a < b) ? a : b;
}
*/

//==================================================================

//Task 4

/*
Напишите функцию pow(x,n), которая возводит x в степень n и возвращает результат.

pow(3, 2) = 3 * 3 = 9
pow(3, 3) = 3 * 3 * 3 = 27
pow(1, 100) = 1 * 1 * ...* 1 = 1
Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).

Запустить демо

P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е. целые от 1 и выше.
*/


function pow(x, n) {
  return x ** n;
};

let x = prompt('x', '');
let n = prompt('n', '');

if (n < 1) {
  alert(`Число 'n' должно быть натуральным, то есть целым от 1 и выше`)
} else {
  alert(pow(x, n));
};

/*
function pow(x, n) {

  let sumnum = x;

  for (let i = 1; i < n; i++) {
    sumnum *= x;
  }

  return sumnum;
};

let x = prompt('x', '');
let n = prompt('n', '');

if (n < 1) {
  alert(`Число 'n' должно быть натуральным, то есть целым от 1 и выше`)
} else {
  alert(pow(x, n));
};
*/